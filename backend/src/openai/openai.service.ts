import {
  Injectable,
  InternalServerErrorException,
  UnauthorizedException,
} from '@nestjs/common';
import OpenAI from 'openai';
import { figmaNodeToHumanDescription } from 'src/figma/utils/figma-node-to-human-description';
import { FigmaNode } from '../figma/types/figma-node.interface';

@Injectable()
export class OpenaiService {
  private readonly openai: OpenAI;

  constructor() {
    const apiKey = process.env.OPENAI_API_KEY;
    if (!apiKey) throw new UnauthorizedException('No OpenAI API key in env');
    this.openai = new OpenAI({ apiKey });
  }

  // Универсальный метод для любой генерации
  async generateCode(prompt: string): Promise<string> {
    try {
      const model = process.env.OPENAI_MODEL || 'gpt-4o';
      const response = await this.openai.chat.completions.create({
        model,
        messages: [
          {
            role: 'system',
            content:
              'You are a Front-end Rockstar who writes perfect, clean, production-ready React components in TypeScript and Material-UI 7. Output only code. No explanations.',
          },
          { role: 'user', content: prompt },
        ],
        temperature: 0.2,
        max_tokens: 1200,
      });

      const code = response.choices?.[0]?.message?.content?.trim();
      if (!code)
        throw new InternalServerErrorException('No code generated by OpenAI');
      return code;
    } catch (err) {
      if (err instanceof Error) {
        throw new InternalServerErrorException(err.message);
      }
      throw new InternalServerErrorException('Unknown error in OpenAI service');
    }
  }

  // Метод для генерации React-компонента по Figma node
  async generateReactComponentFromFigma(node: FigmaNode): Promise<string> {
    const humanDesc = figmaNodeToHumanDescription(node);

    const prompt = [
      `Сгенерируй современный, production-ready React-компонент на TypeScript и Material-UI 7 по следующему человеческому описанию:`,
      '',
      humanDesc,
      '',
      'JSON-структура для справки:',
      '```json',
      JSON.stringify(node, null, 2),
      '```',
      '',
      'Отдай только исходный код компонента. Не добавляй пояснений или комментариев.',
    ].join('\n');

    return this.generateCode(prompt);
  }
}
