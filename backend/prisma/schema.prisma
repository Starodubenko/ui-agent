generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  components Component[]
  figmaFiles FigmaFile[]
  promptRequests PromptRequest[]
}

model Component {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  name      String
  createdAt DateTime @default(now())
  versions  Version[]
  figmaFiles FigmaFile[]
  promptRequests PromptRequest[]
}

model Version {
  id          String    @id @default(uuid())
  name        String
  component   Component @relation(fields: [componentId], references: [id])
  componentId String
  code        String
  meta        Json
  createdAt   DateTime  @default(now())
  tests       Test[]
}


model Test {
  id                  String            @id @default(uuid())
  componentVersion    Version  @relation(fields: [componentVersionId], references: [id])
  componentVersionId  String
  name                String
  code                String
  meta                Json
  createdAt           DateTime          @default(now())
}

model FigmaFile {
  id          String   @id @default(uuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  component   Component? @relation(fields: [componentId], references: [id])
  componentId String?
  fileId      String
  nodeId      String?
  meta        Json
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model PromptRequest {
  id          String   @id @default(uuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  component   Component? @relation(fields: [componentId], references: [id])
  componentId String?
  prompt      String
  response    String   // сюда можно сохранять сгенерированный код/ответ
  meta        Json
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
